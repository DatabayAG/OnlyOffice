<?php

namespace srag\Plugins\OnlyOffice\ObjectSettings;

use srag\Plugins\OnlyOffice\Utils\OnlyOfficeTrait;
use ActiveRecord;
use arConnector;
use ilOnlyOfficePlugin;
use srag\DIC\OnlyOffice\DICTrait;

/**
 * Class ObjectSettings
 * Generated by SrPluginGenerator v1.3.4
 * @author  Theodor Truffer <thoe@fluxlabs.ch>
 *          Sophie Pfister <sophie@fluxlabs.ch>
 */
class ObjectSettings extends ActiveRecord
{

    use DICTrait;
    use OnlyOfficeTrait;

    const TABLE_NAME = "rep_robj_xono_set";
    const PLUGIN_CLASS_NAME = ilOnlyOfficePlugin::class;

    /**
     * @inheritDoc
     */
    public function getConnectorContainerName() : string
    {
        return self::TABLE_NAME;
    }

    /**
     * @inheritDoc
     * @deprecated
     */
    public static function returnDbTableName() : string
    {
        return self::TABLE_NAME;
    }

    /**
     * @var int
     * @con_has_field    true
     * @con_fieldtype    integer
     * @con_length       8
     * @con_is_notnull   true
     * @con_is_primary   true
     */
    protected $obj_id;

    /**
     * @var string
     * @con_has_field  true
     * @con_fieldtype  text
     * @con_is_notnull true
     */
    protected $title;

    /**
     * @var string
     * @con_has_field true
     * @con_fieldtype text
     */
    protected $description;

    /**
     * @var bool
     * @con_has_field    true
     * @con_fieldtype    integer
     * @con_length       1
     * @con_is_notnull   true
     */
    protected $is_online = false;

    /**
     * @var int
     * @con_has_field  true
     * @con_fieldtype  integer
     * @con_is_notnull true
     */
    protected $number_of_versions = 10;

    /**
     * @var string
     * @con_has_field  true
     * @con_fieldtype  text
     * @con_length     10
     * @con_is_notnull true
     */
    protected $open = "ilias";

    /**
     * ObjectSettings constructor
     * @param int              $primary_key_value
     * @param arConnector|null $connector
     */
    public function __construct(/*int*/ $primary_key_value = 0, arConnector $connector = null)
    {
        parent::__construct($primary_key_value, $connector);
    }

    /**
     * @inheritDoc
     */
    public function sleep(/*string*/ $field_name)
    {
        $field_value = $this->{$field_name};

        switch ($field_name) {
            case "is_online":
                return ($field_value ? 1 : 0);
            case "open":
                switch ($field_value) {
                    case "1":
                        return "editor";
                    case "2":
                        return "download";
                    default: // "" / "0"
                        return "ilias";
                }

            default:
                return null;
        }
    }

    /**
     * @inheritDoc
     */
    public function wakeUp(/*string*/ $field_name, $field_value)
    {
        switch ($field_name) {
            case "obj_id":
                return intval($field_value);

            case "is_online":
                return boolval($field_value);
            default:
                return null;
        }
    }

    /**
     * @return int
     */
    public function getObjId() : int
    {
        return $this->obj_id;
    }

    /**
     * @param int $obj_id
     */
    public function setObjId(int $obj_id)/*: void*/
    {
        $this->obj_id = $obj_id;
    }

    public function getTitle() : string
    {
        return $this->title;
    }

    public function setTitle(string $title)
    {
        $this->title = $title;
    }

    public function getDescription() : string
    {
        return $this->description;
    }

    public function setDescription(string $description)
    {
        $this->description = $description;
    }

    /**
     * @return bool
     */
    public function isOnline() : bool
    {
        return $this->is_online;
    }

    /**
     * @param bool $is_online
     */
    public function setOnline(bool $is_online = true)/*: void*/
    {
        $this->is_online = $is_online;
    }

    public function getNumberOfVersions() : int
    {
        return $this->number_of_versions;
    }

    public function setNumberOfVersions(int $number)
    {
        $this->number_of_versions = $number;
    }

    public function getOpen() : string
    {
        return $this->open;
    }

    public function setOpen(string $open)
    {
        $this->open = $open;
    }
}
