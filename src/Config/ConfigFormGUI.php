<?php

namespace srag\Plugins\OnlyOffice\Config;

use srag\Plugins\OnlyOffice\Utils\OnlyOfficeTrait;
use ilOnlyOfficeConfigGUI;
use ilOnlyOfficePlugin;
use ilTextInputGUI;
use srag\ActiveRecordConfig\OnlyOffice\Config\Config;
use srag\CustomInputGUIs\OnlyOffice\PropertyFormGUI\PropertyFormGUI;

/**
 * Class ConfigFormGUI
 *
 * Generated by SrPluginGenerator v1.3.4
 *
 * @package srag\Plugins\OnlyOffice\Config
 *
 * @author studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 */
class ConfigFormGUI extends PropertyFormGUI
{

    use OnlyOfficeTrait;
    const PLUGIN_CLASS_NAME = ilOnlyOfficePlugin::class;
    const KEY_ONLYOFFICE_URL = "onlyoffice_url";
    const KEY_ONLYOFFICE_SECRET = "onlyoffice_secret";
    const LANG_MODULE = ilOnlyOfficeConfigGUI::LANG_MODULE;


    /**
     * ConfigFormGUI constructor
     *
     * @param ilOnlyOfficeConfigGUI $parent
     */
    public function __construct(ilOnlyOfficeConfigGUI $parent)
    {
        parent::__construct($parent);
    }


    /**
     * @inheritDoc
     */
    protected function getValue(string $key)
    {
        switch ($key) {
            default:
                return self::onlyOffice()->config()->getValue($key);
        }
    }

    /**
     * @inheritDoc
     */
    protected function initCommands()/*: void*/
    {
        $this->addCommandButton(ilOnlyOfficeConfigGUI::CMD_UPDATE_CONFIGURE, $this->txt("save"));
    }


    /**
     * @inheritDoc
     */
    protected function initFields()/*: void*/
    {
        $this->fields = [
            self::KEY_ONLYOFFICE_URL => [
                self::PROPERTY_CLASS => ilTextInputGUI::class,
                self::PROPERTY_REQUIRED => true
            ],
            self::KEY_ONLYOFFICE_SECRET => [
                self::PROPERTY_CLASS => \ilPasswordInputGUI::class,
                self::PROPERTY_REQUIRED => true
            ]
        ];
    }

    /**
     * @inheritDoc
     */
    protected function initId()/*: void*/
    {

    }


    /**
     * @inheritDoc
     */
    protected function initTitle()/*: void*/
    {
        $this->setTitle($this->txt("configuration"));
    }

    /**
     * @inheritDoc
     */
    protected function storeValue(string $key, $value)/*: void*/
    {
        switch ($key) {
            default:
                self::onlyOffice()->config()->setValue($key, $value);
                break;
        }
    }
}
